@using System.Configuration
@using Coin.SDK

@model dynamic

@{
    ViewBag.Title = "Payment options";
}

@Coin.SDK.Html.Script(ConfigurationManager.AppSettings[Constants.CocoinSiteUrl]+"sdk/payment.js")

<h2>Quick payment via order http request, using the SDK</h2>
None of these require the use of the Cocoin API at any point, but we are leveraging the helper classes of the Cocoin .NET SDK.

<h3 style="margin-top: 30px">Specified</h3>
This specifies the amount, the email of the receiver, an order reference, the due date and the mercant ID.<br/>
It's unsigned and can be tampered/spammed/spoofed. <br/>

@Coin.SDK.Html.PaymentButton(ViewBag.SpecifiedOrder)


<h3 style="margin-top: 30px">Specified signed</h3>
Same as above but with a hmac.<br/>

@Coin.SDK.Html.PaymentButton(ViewBag.SignedSpecifiedOrder)







<h3 style="margin-top: 30px">Blank order</h3>
Essentially the same as above but only the order reference and the merchant ID is specified.<br/>
The recipient, the amount and due_date are left open. These can be tampered with anyway.<br/>

@Coin.SDK.Html.PaymentButton(ViewBag.BlankOrder)
  


<h3 style="margin-top: 30px">Signed blank order</h3>
Same as above but with a hmac<br/>

@Coin.SDK.Html.PaymentButton(ViewBag.SignedBlankOrder)
